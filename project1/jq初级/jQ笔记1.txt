初级3个实例：编写选项卡，弹窗，拖拽
scrollTop() ;  //滚动距离
ev : event对象
ev.pageX(相对于文档的) = clientX(相对于可视区)+滚动条
ev.which : keyCode（键盘键值），which既可用于键盘，还有鼠标。键盘回车代表13
ev.preventDefault();  阻止默认事件
ev.stopPropagation();  //阻止冒泡的操作
return false;=以上两者 阻止默认事件 + 阻止冒泡的操作
one() 只执行事件一次
offset().left ;  获取到屏幕的左距离
position().left ;  //到有定位的父级的left值,父级没定位就到屏幕，把当前元素转化成类似定位的形式,有margin不算在内。
parent() : 获取父级
offsetParent() : 获取有定位的父级，父级没有定位获取的是body
size()：像length
val()
each():像JQ的循环。$('li').each( function(i,elem){ $(elem).html(i);} );  //一参：下标 二参 : 每个元素
hover( function(){},function(){} )
slideUp():向上卷取
slideDown():向下卷取
fadeIn():淡入
fadeOut():淡出 //默认400
fadeTo(1000,0.5):经过1秒，变淡0.5
show(3000):
hide(2000):都可以加时间
get(0) : 就是把JQ转成原生JS，以集合的形式。 $('li').length JQ也有length属性
offsetWidth : 原生js是获取不到隐藏元素的值
outerWidth:不管隐藏或显示的都可以获取到。
width()://width
innerWidth():  //width + padding
outerWidth()://width + padding + border
outerWidth(true): //width + padding + border + margin
html():如果有一组div，取值只会取到第一个。赋值会都赋值。
text():会获取到这一组的所有文本内容
remove():删除后再添加，不会保留删除之前自身所有的事件
detach():删除后再添加，保留删除之前自身所有的事件
$(function(){  //等DOM加载完就可以执行了 , 性能要好});
DOMContentLoaded:DOM加载完事件
$(document).ready( function(){} );
parents() : 获取当前元素的所有祖先节点，参数就是筛选功能
closest() : 获取最近的指定的祖先节点(包括当前元素自身),必须要写筛选的参数,只能找到一个元素
siblings() : 找所有的兄弟节点，参数也是筛选功能
nextAll() : 下面所有的兄弟节点，参数也是筛选功能
prevAll() : 上面所有的兄弟节点
Until() : 截止
nextUntil('h2'):h2及以下都不执行
prevUntil
clone(true) : 可以接收一个参数 ，作用可以复制之前的操作行为
one()方法：点一次弹123，再点不弹
wrap('<div>') : 包装
wrapAll() : 整体包装   $('span').wrapAll('<div>');所有span都被一个div包起来
wrapInner() : 内部包装  $('span').wrapInner('<div>');<span><div></div></span>
unwrap() : 删除包装 ( 删除父级 : 不包括body )	
add():  var elem = $('div');var elem2 = elem.add('span');elem2.css('background','yellow');
slice(): li的第一个到第四个设置背景   $('li').slice(1,4).css('background','red');
serialize():  //返回：string : a=1&b=2&c=3
serializeArray():返回值是Json样子的
	[
		{ name : 'a' , value : '1' },
		{ name : 'b' , value : '2' },
		{ name : 'c' , value : '3' }
	]
